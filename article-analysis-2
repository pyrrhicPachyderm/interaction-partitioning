#!/usr/bin/env Rscript

suppressPackageStartupMessages(library(optparse))

this_dir <- dirname(this.path::this.path())
source(paste0(this_dir, "/r/parameters.R"))
source(paste0(this_dir, "/r/input-data.R"))
source(paste0(this_dir, "/r/post-process.R"))
source(paste0(this_dir, "/r/rjmcmc-post-process.R"))
source(paste0(this_dir, "/r/coclassification-table.R"))

##################
#Argument parsing.
##################

usage = "%prog [options] OUTPUT_FILE"
description = "Performs all the heavy analysis for the article and supplementary rnw files, and saves it as a .rda file."
option_list <- list()
parser <- OptionParser(usage = usage, description=description, option_list=option_list)
arguments <- parse_args(parser, positional_arguments = 1)

outfile <- arguments$args[1]

attach(arguments$options)

##########
#Analysis.
##########

species_datas <- lapply(
	list(
		tcl = "/data/tcl/species.csv",
		cxr = "/output/cxr/species.csv",
		goldberg = "/data/goldberg/species.csv",
		carrara = "/data/carrara/species.csv"
	),
	function(file) {
		read.csv(paste0(this_dir, file))
	}
)

datas <- mapply(
	function(file, species_data) {
		RJMCMCData$new(paste0(this_dir, file), species_data$name)
	},
	list(
		tcl = "/output/tcl/rjmcmc.data",
		cxr = "/output/cxr/rjmcmc.data",
		goldberg = "/output/goldberg/rjmcmc.data",
		carrara = "/output/carrara/rjmcmc.data"
	),
	species_datas
)

output_orders <- list(
	tcl = c(4,3,1,2,6,5),
	cxr = c(8,7,1,2,3,6,5,4,9),
	goldberg = c(1,5,3,6,7,2,4),
	carrara = 1:11 #TODO
)

#########
#Figures.
#########

coclassification_colourmap <- "coclassification"
coclassification_diagonal_colour <- "coclassification diagonal"
coclassification_colour_setup <- paste0(
	"\\pgfplotsset{colormap={",coclassification_colourmap,"}{color=(white) color=(red)}}\n",
	"\\colorlet{",coclassification_diagonal_colour,"}{black!20}\n"
)

get_coclassification_matrices <- function(data, output_order) {
	lapply(
		list(
			growth = data$weighted_growth_coclassification_matrix,
			row = data$weighted_row_coclassification_matrix,
			col = data$weighted_col_coclassification_matrix
		),
		function(mat) {
			output_order <- output_order[output_order <= nrow(mat)]
			weighted_coclassification_kable(
				mat[output_order,output_order],
				colourmap="coclassification", diagonal_colour="coclassification diagonal"
			)
		}
	)
}

coclassification_matrices <- mapply(get_coclassification_matrices, datas, output_orders, SIMPLIFY = FALSE)

#############
#Save output.
#############

print(ls())

save(list = ls(), file = outfile)
